# Configuration file

~CONFIG_VERSION: V2

client {
    # If true, a button will be shown when there is any amount of tc4 notifications AND when sending chat.
    # [default: true]
    B:addClearButton=true

    # If true, a search box will appear on the top right bar of thaumonomicon gui.
    # This feature is taken from WitchingGadgets due to the said GUI is being upsized by this mod and without modifying its code, the search box would not be positioned correctly.
    # Will disable WitchingGadget's search feature (if it is present) regardless of whether this is true.
    # [default: true]
    B:addResearchSearch=true

    # If false, no tooltip will be added.
    # [default: true]
    B:addTooltip=true

    # Specify a full sorting order of research tabs.
    # An empty list here means the feature is disabled.
    # any research tab not listed here will be appended to the end in their original order.
    # Use NEI utility to dump a list of all research tabs.
    # Default is the list of all vanilla thaumcraft tabs.
    # [default: [BASICS], [THAUMATURGY], [ALCHEMY], [ARTIFICE], [GOLEMANCY], [ELDRITCH]]
    S:categoryOrder <
        BASICS
        THAUMATURGY
        ALCHEMY
        ARTIFICE
        GOLEMANCY
        ELDRITCH
     >

    # Select the style of completion counter.
    # Default: Current.
    # None: disable completion progress counter.
    # Current: display how many you have completed already, and only show the total count for this tab when everything here has been learnt.
    # All: show all counters at all times.
    # [default: Current]
    S:completionCounterStyle=Current

    # Flip it if you find the scrolling unintuitive [default: false]
    B:inverted=false

    # Whether the book gui search should search current tab only.
    # [default: false]
    B:limitBookSearchToCategory=false

    # The upper limit on how big nodes can be rendered.
    # This is purely a visual thing and will not affect how big your node can actually grow.
    # Setting a value like 10000.0 will effectively turn off this functionality, i.e.
    # not limit the rendered size.
    # [range: 0.5 ~ 1.0E10, default: 1.0]
    S:limitOversizedNodeRender=1.0

    # Whether to adjust mapping thread priority.
    # 0 means auto.
    # 1 means force enable.
    # 2 means force disable.
    # [range: 0 ~ 2, default: 0]
    I:mappingThreadNiceType=0

    # How often should Arcane Workbench update displayed crafting result.
    # Unit is in game ticks.
    # [range: 0 ~ 40, default: 4]
    I:updateInterval=4

    browser_scale {
        # The search result area, even if it's not disabled, will be considered while inferring browserScale.
        # [default: true]
        B:considerSearchArea=true

        # Tweak the size of the book gui based on screen size automatically.
        # The value of browserScale set manually will not function any more.
        # [default: true]
        B:infer=true

        # The minimum inferred scale.
        # Cannot be smaller than the value of inferBrowserScaleLowerBound.
        # This shouldn't be too high as a huge browser would be rendered with really poor image quality.
        # [range: 1.0 ~ 16.0, default: 4.0]
        S:maximum=4.0

        # The maximum inferred scale.
        # Cannot be bigger than the value of inferBrowserScaleUpperBound.
        # [range: 1.0 ~ 16.0, default: 1.0]
        S:minimum=1.0

        # Tweak the size of the book gui.
        # No longer works if inferBrowserScale is set to true.
        # [range: 1.0 ~ 4.0, default: 1.0]
        S:scale=1.0
    }

}


general {
    # The maximum size of arcane crafting cache.
    # 0 will effectively turn off the cache.
    # It is suggested to keep a size of at least 1 to ensure shift crafting does not lag the server.
    # [range: 0 ~ 256, default: 16]
    I:arcaneCraftingHistorySize=16

    # When false, Arcane Workbench will not perform vanilla crafting bench recipes.
    # Arcane Workbench GUI will behave slightly awkwardly if the client has it false but not on server, but nothing would be broken.
    # [default: true]
    B:checkWorkbenchRecipes=true

    # If true, dispenser will shoot primal arrow instead of dropping it into world.
    # [default: false]
    B:dispenserShootPrimalArrow=false

    # Select the infusion oredict mode.
    # Default: vanilla TC4 behavior.
    # Strict: all oredict names must match to count as oredict substitute.
    # Relaxed: oredict names needs only overlaps to count as oredict substitute.
    # None: no oredict substitute at all.
    # [default: Default]
    S:infusionOreDictMode=Default

    # If true, enchanted books will have randomized enchantment and vis stone will have different vis stored even without server restart.
    # [default: true]
    B:moreRandomizedLoot=true

    # If true, jars (brain in jar, essentia jars, etc) will have a collision box the same as block outline.
    # Otherwise it will have a collision box of 1x1x1, which is the vanilla tc4 behavior.
    # [default: false]
    B:smallerJars=false
}


